from django.shortcuts import render, redirect, get_object_or_404from django.contrib import messagesfrom django.utils.decorators import method_decoratorfrom django.contrib.auth.decorators import login_requiredfrom django.core.paginator import Paginatorfrom django.http import JsonResponsefrom core.forms.category_form import CategoryFormfrom core.models.category import Category# @method_decorator(login_required)def category(request):    category_obj = Category.objects.all().order_by('-id')    # pagination    paginator = Paginator(category_obj, 4)    page = request.GET.get('page')    category_obj = paginator.get_page(page)    form = CategoryForm()    # Search query    search_query = request.GET.get('category_obj')    if search_query:        category_obj = category_obj.filter(name__icontains=search_query)    context = {        'category_obj': category_obj,        'form': form    }    template_name = 'category/category.html'    return render(request, template_name, context)def categoryCreateUpdate(request):    permit = 0    messages = {}    messages['error'] = 1    if request.method == 'POST' and request.is_ajax():        category = request.POST.get('name')        id = request.POST.get('id')        existing_category = Category.objects.filter(name=category).exists()        if existing_category:            messages['error'] = 1            messages['message'] = "Category name already exists !"        else:            permit = 1    if permit > 0:        if id != '':            Category.objects.filter(pk=id).update(name=category)            messages['error'] = 0            messages['message'] = "Data has been updated successfully. !"        else:            form = CategoryForm(request.POST)            if request.method == 'POST':                if form.is_valid():                    instance = form.save(commit=False)                    instance.save()                messages['error'] = 0                messages['message'] = "Data has been saved successfully. !"    template_name = 'category/category.html'    return JsonResponse(messages)